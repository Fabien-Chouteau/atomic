on:                    # Run the workflow for each of the following event:
  push:                # - A branch is pushed or updated.
  pull_request:        # - A pull-request is openned or updated.
  workflow_dispatch:   # - A manual run of the workflow is requested from the GitHub web interface.
  release:
    types: [created]   # - A release is created.

jobs:
  build_native:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        gnat_version: [^10, ^11, ^12]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: alire-project/setup-alire@v1
        with:
          toolchain: gnat_native${{ matrix.gnat_version }} gprbuild --disable-assistant
      - run: alr build
      - run: cd tests && alr build --validation
      - run: cd tests && alr run

        # Produce an Alire release manifest
      - name: Make Release Manifest
        if: (startsWith(matrix.os, 'ubuntu'))
        run: |
          # Set user GitHub login required for `alr publish`
          alr config --set --global user.github_login ${{github.repository_owner}}

          # Run Alire publish assistant
          alr publish ${{github.server_url}}/${{github.repository}} ${{github.sha}}

        # Save the path to the release manifest for the next step.
        # This is a little trick to get around the fact that the actions/upload-release-asset doesn't allow globing pattern.
      - name: Get Release Manifest PATH
        if: (github.event_name == 'release' && startsWith(matrix.os, 'ubuntu'))
        shell: bash
        run: |
          export MANIFEST_PATHNAME=$(ls alire/releases/*.toml | head -n 1)
          echo MANIFEST_PATHNAME=$MANIFEST_PATHNAME >> $GITHUB_ENV
          echo MANIFEST_NAME=$(basename $MANIFEST_PATHNAME) >> $GITHUB_ENV

        # If this worklow was triggered by a release event, upload the release manifest as a GitHub release asset.
      - name: Upload release manifest
        if: (github.event_name == 'release' && startsWith(matrix.os, 'ubuntu'))
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.MANIFEST_PATHNAME }}
          asset_name: ${{ env.MANIFEST_NAME }}
          asset_content_type: application/toml

  build_arm_elf:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        gnat_version: [^10, ^11, ^12]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: alire-project/setup-alire@v1
        with:
          toolchain: gnat_arm_elf${{ matrix.gnat_version }} gprbuild --disable-assistant

      - run: cd tests/armv6m && alr build --validation
        if: ${{ matrix.gnat_version == '^12' }}
      - run: cd tests/rp2040_spinlock && alr build --validation
        if: ${{ matrix.gnat_version == '^12' }}

      - run: cd tests/armv6m && alr build --validation -- -XTESTS_RUNTIME=zfp-cortex-m0
        if: ${{ matrix.gnat_version != '^12' }}
      - run: cd tests/rp2040_spinlock && alr build --validation  -- -XTESTS_RUNTIME=zfp-cortex-m0
        if: ${{ matrix.gnat_version != '^12' }}
