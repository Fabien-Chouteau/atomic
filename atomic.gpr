with "config/atomic_config.gpr";
project Atomic is

   for Library_Name use "Atomic";
   for Library_Version use Project'Library_Name & ".so." & Atomic_Config.Crate_Version;

   case Atomic_Config.Backend is
      when "Intrinsic" =>
         for Source_Dirs use ("src",
                              "config",
                              "src/intrinsic");
      when "armv6m" =>
         for Source_Dirs use ("src",
                              "config",
                              "src/critical_section",
                              "src/armv6m");
      when "rp2040_spinlock" =>
         for Source_Dirs use ("src",
                              "config",
                              "src/critical_section",
                              "src/rp2040_spinlock");
   end case;

   for Object_Dir use "obj/" & Atomic_Config.Build_Profile;
   for Create_Missing_Dirs use "True";
   for Library_Dir use "lib";

   type Library_Type_Type is ("relocatable", "static", "static-pic");
   Library_Type : Library_Type_Type :=
     external ("ATOMIC_LIBRARY_TYPE", external ("LIBRARY_TYPE", "static"));
   for Library_Kind use Library_Type;

   package Compiler is
      for Default_Switches ("Ada") use Atomic_Config.Ada_Compiler_Switches;
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Install is
      for Artifacts (".") use ("share");
   end Install;

end Atomic;
